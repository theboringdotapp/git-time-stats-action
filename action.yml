name: 'Git Time Stats'
description: 'Calculate and update README with time spent on a repository based on git commits'
author: 'theboringdotapp'
branding:
  icon: 'clock'
  color: 'blue'

inputs:
  session-gap:
    description: 'Time gap in minutes to consider between sessions'
    required: false
    default: '30'
  min-session:
    description: 'Minimum session duration in minutes'
    required: false
    default: '5'
  max-session:
    description: 'Maximum session duration in hours'
    required: false
    default: '8'
  readme-path:
    description: 'Path to the README file to update'
    required: false
    default: 'README.md'
  update-readme:
    description: 'Whether to update the README with the stats'
    required: false
    default: 'true'

outputs:
  stats:
    description: 'Generated statistics in markdown format'
    value: ${{ steps.generate_stats.outputs.stats }}
  changed:
    description: 'Whether the README was updated (true/false)'
    value: ${{ steps.update_readme.outputs.changed }}

runs:
  using: 'composite'
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    
    - name: Generate Stats
      id: generate_stats
      shell: bash
      run: |
        # Copy the script to the workspace
        cp ${{ github.action_path }}/git_time_estimator.py ./git_time_estimator_temp.py
        
        # Run the time estimator script from the repository root directory
        python ./git_time_estimator_temp.py \
          --session-gap ${{ inputs.session-gap }} \
          --min-session ${{ inputs.min-session }} \
          --max-session ${{ inputs.max-session }} > stats_output.txt
        
        # Base64 encode the output to handle multi-line content
        encoded_stats=$(base64 -w 0 stats_output.txt)
        echo "stats_content_b64=$encoded_stats" >> $GITHUB_OUTPUT
        
        # Also write the raw stats for output
        raw_stats=$(cat stats_output.txt)
        echo "stats<<EOF" >> $GITHUB_OUTPUT
        echo "$raw_stats" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
        # Clean up the temporary script
        rm ./git_time_estimator_temp.py
    
    - name: Update README
      if: inputs.update-readme == 'true'
      id: update_readme
      shell: bash
      run: |
        # Copy the update script to the workspace
        mkdir -p ./temp_scripts
        cp ${{ github.action_path }}/scripts/update_readme.py ./temp_scripts/update_readme.py
        chmod +x ./temp_scripts/update_readme.py
        
        # Decode the Base64 stats content
        decoded_stats=$(echo "${{ steps.generate_stats.outputs.stats_content_b64 }}" | base64 -d)
        
        # Pass decoded content via environment variable
        export STATS_CONTENT="$decoded_stats"
        
        # Run the update script from the repository root
        python ./temp_scripts/update_readme.py ${{ inputs.readme-path }}
        
        # Clean up temporary files
        rm -rf ./temp_scripts 